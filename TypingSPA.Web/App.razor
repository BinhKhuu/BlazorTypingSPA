<MudThemeProvider @ref="@MudThemeProviderRef" IsDarkMode="Settings.IsDarkMode" DefaultScrollbar="Settings.DefaultScrollBar" />
<MudDialogProvider />
<MudSnackbarProvider />

<Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code{
    [Inject]
    ThemeService ThemeService { get; set; }
    MudThemeProvider MudThemeProviderRef { get; set; }
    ThemeSettings Settings { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // prevent MudThemeProvider from erroring since Settings is used as bind property
        Settings = new ThemeSettings();
        await ThemeService.LoadSettingsFromLocalStorage();
        Settings = ThemeService.SettingsObservable.Settings;
        Action<ThemeSettings> OnThemeSettingsUpdate = (settings) =>
        {
            Settings = settings;
            ThemeService.SaveLocalStorageThemeSettings();
            this.StateHasChanged();
        };

        ThemeService.AddThemeSubscription(OnThemeSettingsUpdate);
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // load preferences not needed when OnIntializedAsync also loads theme settings
            await ThemeService.LoadSettingsFromLocalStorage();
            Settings = ThemeService.SettingsObservable.Settings;
        }
    }
}