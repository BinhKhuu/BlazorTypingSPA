<MudThemeProvider IsDarkMode="IsDarkMode" Theme="@ThemeService.Theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code{
    //[Inject]
    //MudThemeProvider _mudThemeProvider { get; set; }
    [Inject]
    ThemeService ThemeService { get; set; }
    bool IsDarkMode { get; set; } = true;

    protected override void OnInitialized()
    {
        ThemeService.IsDarkModeObservable.UpdateDarkMode(IsDarkMode);
        // using Observable because theme manager can't trigger StateHasChanged in App component
        Action<bool> OnDarkModeChange = (isDarkMode) =>
        {
            IsDarkMode = isDarkMode;
            this.StateHasChanged();
        };
        ThemeService.AddDarkModeSubscription(OnDarkModeChange);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            IsDarkMode = true;
            //IsDarkMode = await _mudThemeProvider.GetSystemPreference();
            //StateHasChanged();
        }
    }

    // TODO get system preference for dark mode https://mudblazor.com/customization/overview#system-preference
}